// <auto-generated />
using System;
using GoodHamburger.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GoodHamburger.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GoodHamburger.Core.Models.Extra", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("SandwichId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("Userid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SandwichId");

                    b.ToTable("Extra", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Fries",
                            Price = 2.00m,
                            Userid = new Guid("206d0fcc-ea9a-4164-9c38-c48b18451e1e")
                        },
                        new
                        {
                            Id = 2L,
                            Name = "SoftDrink",
                            Price = 2.50m,
                            Userid = new Guid("206d0fcc-ea9a-4164-9c38-c48b18451e1e")
                        });
                });

            modelBuilder.Entity("GoodHamburger.Core.Models.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("SandwichId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("Userid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SandwichId");

                    b.ToTable("Pedido", (string)null);
                });

            modelBuilder.Entity("GoodHamburger.Core.Models.Sandwich", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("Userid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Sandwich", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "XBurger",
                            Price = 5.00m,
                            Userid = new Guid("206d0fcc-ea9a-4164-9c38-c48b18451e1e")
                        },
                        new
                        {
                            Id = 2L,
                            Name = "XEgg",
                            Price = 4.50m,
                            Userid = new Guid("206d0fcc-ea9a-4164-9c38-c48b18451e1e")
                        },
                        new
                        {
                            Id = 3L,
                            Name = "XBacon",
                            Price = 7.00m,
                            Userid = new Guid("206d0fcc-ea9a-4164-9c38-c48b18451e1e")
                        });
                });

            modelBuilder.Entity("GoodHamburger.Core.Models.Extra", b =>
                {
                    b.HasOne("GoodHamburger.Core.Models.Sandwich", null)
                        .WithMany("Extra")
                        .HasForeignKey("SandwichId");
                });

            modelBuilder.Entity("GoodHamburger.Core.Models.Order", b =>
                {
                    b.HasOne("GoodHamburger.Core.Models.Sandwich", "Sandwich")
                        .WithMany()
                        .HasForeignKey("SandwichId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sandwich");
                });

            modelBuilder.Entity("GoodHamburger.Core.Models.Sandwich", b =>
                {
                    b.Navigation("Extra");
                });
#pragma warning restore 612, 618
        }
    }
}
